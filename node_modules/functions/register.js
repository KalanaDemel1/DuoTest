var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var user = require('functions/models');



exports.register = function(pno,password,firstname,lastname,email,OwnsVehicle,enableRideShare,gender,callback) {

var x = pno;
	user.find({'pno':x},function(err,users){

		if(users.length != 0){
				callback({'response':"Phone number is already registered",'res':false});
			}
		else if(x.length=10){
			if (password.length > 4) {

				var id = mongoose.Types.ObjectId();

				var user1 = new user({
					"_id":id,
					"pno" : pno,
					"password" : password,
					"email" : email,
					"firstname" : firstname,
					"lastname" : lastname,
					"OwnsVehicle" : OwnsVehicle,
					"enableRS": enableRideShare,
					"gender" : gender
					  });

				user.find({pno: pno},function(err,users){

					var len = users.length;

					if(len == 0){
						user1.save(function (err, data) {
							if(err) {
								console.log(err);
								callback({'response':"Network Error",'res':true});
							}
							else{
								console.log('Saved : ', data );
								callback({'response':"Account Created Successfullly",'res':true});
							}
						});
					}else{

						callback({'response':"Phone already Registered"});

					}
				});
			}
			else{

				callback({'response':"Password is too small"});

			}
		}
		else{
			callback({'response':"Format Error"});
		}



	});}

